---
import { Image } from 'astro:assets';

export interface Props {
  src: string;
  alt: string;
  width?: number;
  height?: number;
  class?: string;
  loading?: 'lazy' | 'eager';
  decoding?: 'async' | 'sync' | 'auto';
  sizes?: string;
  quality?: number;
  format?: 'webp' | 'avif' | 'png' | 'jpg';
}

const {
  src,
  alt,
  width = 800,
  height = 600,
  class: className,
  loading = 'lazy',
  decoding = 'async',
  sizes,
  quality = 80,
  format = 'webp',
  ...rest
} = Astro.props;

// Handle both local and external images
const isLocalImage = src.startsWith('/') || src.startsWith('./') || src.startsWith('../');

// For Astro Image component, we need to provide width and height
const imageProps = {
  src,
  alt,
  width,
  height,
  class: className,
  loading,
  decoding,
  quality,
  format,
  ...(sizes && { sizes }),
  ...rest
};
---

{isLocalImage ? (
  <Image {...imageProps} />
) : (
  <img
    src={src}
    alt={alt}
    width={width}
    height={height}
    class={className}
    loading={loading}
    decoding={decoding}
    {...rest}
  />
)}

<style>
  img {
    max-width: 100%;
    height: auto;
  }
</style>